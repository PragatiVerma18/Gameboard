version: "3.8"

services:
  web:
    build: .
    container_name: gameboard_api
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - db_migrations
      - redis
    environment:
      - DEBUG=True
      - DATABASE_URL=sqlite:///db.sqlite3
    volumes:
      - ./db.sqlite3:/app/db.sqlite3  # Ensure SQLite is shared across containers

  db_migrations:
    build: .
    container_name: gameboard_db_migrations
    command: sh -c "python manage.py migrate"
    depends_on:
      - redis
    environment:
      - DEBUG=True
      - DATABASE_URL=sqlite:///db.sqlite3
    volumes:
      - ./db.sqlite3:/app/db.sqlite3

  redis:
    image: "redis:alpine"
    container_name: gameboard_redis
    restart: always

  celery_worker:
    build: .
    container_name: gameboard_celery_worker
    command: sh -c "sleep 5 && celery -A gameboard worker --loglevel=info"
    depends_on:
      - web  # Wait for Django to start
      - redis
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    volumes:
      - ./db.sqlite3:/app/db.sqlite3  # Ensure Celery sees the same SQLite file

  celery_beat:
    build: .
    container_name: gameboard_celery_beat
    command: sh -c "sleep 5 && celery -A gameboard beat --loglevel=info"
    depends_on:
      - web
      - redis
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
